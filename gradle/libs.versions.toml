[versions]
kotlin = "1.8.0"
spring-boot = "3.3.0"
spring-dependency-management = "1.0.13.RELEASE"
coroutine = "1.9.0"
mutiny = "2.5.1"
hibernate-reactive = "2.3.0.Final"
h2 = "2.2.224"
jdsl = "3.4.1"
archunit = "1.3.0"
protobuf = "3.25.2"
vertx = "4.5.7"
slf4j = "2.0.12"
logback = "1.5.3"
jakarta-persistence = "3.1.0"
jakarta-inject = "2.0.1"
jakarta-cdi = "3.0.0"
spring-boot-starter = "3.2.4"
kotest = "5.6.2"
docker-plugin = "0.36.0"
protobuf-plugin = "0.9.4"

[libraries]
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }

# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutine" }
coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "coroutine" }
coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "coroutine" }

# Spring Boot
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot-starter" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot-starter" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }

# Reactive
mutiny-kotlin = { module = "io.smallrye.reactive:mutiny-kotlin", version.ref = "mutiny" }

# Database
hibernate-reactive-core = { module = "org.hibernate.reactive:hibernate-reactive-core", version.ref = "hibernate-reactive" }
h2-database = { module = "com.h2database:h2", version.ref = "h2" }
vertx-jdbc-client = { module = "io.vertx:vertx-jdbc-client", version.ref = "vertx" }
agroal-pool = { module = "io.agroal:agroal-pool", version = "2.3" }

# Query DSL
jdsl-jpql-dsl = { module = "com.linecorp.kotlin-jdsl:jpql-dsl", version.ref = "jdsl" }
jdsl-jpql-render = { module = "com.linecorp.kotlin-jdsl:jpql-render", version.ref = "jdsl" }
jdsl-spring-data-jpa-support = { module = "com.linecorp.kotlin-jdsl:spring-data-jpa-support", version.ref = "jdsl" }
jdsl-hibernate-reactive-support = { module = "com.linecorp.kotlin-jdsl:hibernate-reactive-support", version.ref = "jdsl" }

# Jakarta
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence" }
jakarta-inject-api = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject" }
jakarta-enterprise-cdi = { module = "jakarta.enterprise:jakarta.enterprise.cdi-api", version.ref = "jakarta-cdi" }

# Logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Testing
archunit = { module = "com.tngtech.archunit:archunit", version.ref = "archunit" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test" }

# Protobuf
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }

# Kafka
spring-kafka = { module = "org.springframework.kafka:spring-kafka" }

[bundles]
kotlin = ["kotlin-stdlib", "kotlin-reflect"]
coroutines = ["coroutines-core", "coroutines-reactor", "coroutines-reactive", "coroutines-jdk8"]
spring-boot-web = ["spring-boot-starter-webflux", "jackson-module-kotlin"]
database = ["hibernate-reactive-core", "h2-database", "vertx-jdbc-client", "agroal-pool"]
jdsl = ["jdsl-jpql-dsl", "jdsl-jpql-render", "jdsl-spring-data-jpa-support", "jdsl-hibernate-reactive-support"]
jakarta = ["jakarta-persistence-api", "jakarta-inject-api", "jakarta-enterprise-cdi"]
logging = ["slf4j-api", "logback-classic"]
testing = ["spring-boot-starter-test", "kotlin-test", "archunit"]
protobuf = ["protobuf-kotlin", "protobuf-java"]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
docker = { id = "com.palantir.docker", version.ref = "docker-plugin" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf-plugin" }